Para criar um novo projeto em Angular usamos o comando:
    -  ng new appPassaroUrbano --prefix main
    -  Prefix é o nome do seletor pelo qual o componente será invocado dentro do html.
    -  Foi criado uma tag chamada main-root,  <main-root></main-root> para invocar nosso 
    -  componente. 
- Também podemos usar a flag --minimal na criação do projeto se não quisermos que seja 
criado os arquivos de testes.

- Podemos alterar o prefix através do arquivo angular.json.

Instalando o Bootstrap, JQuery e Tether no projeto

- npm install bootstrap@4.5.3 --save
- npm install jquery@3.5.1 --save
- npm install popper.js@1.14.3 --save
- npm install tether@2.0.0 --save

- Após a instalação é necessário referenciar no arquivo angular.json os arquivos de estilo
css e javascript js.

- O Tether é uma biblioteca JavaScript para fazer com que um elemento posicionado 
  absolutamente de forma eficiente fique próximo a outro elemento na página. 
  Por exemplo, você pode desejar que uma dica de ferramenta ou caixa de diálogo 
  seja aberta e permaneça próxima ao item relevante na página.

- Com o Tether Podemos posicionar elementos dentro do DOM (árvore do html) de forma simplificada.

Criando os componentes Topo, Home e Rodape

- Criamos três componentes, topo (header), rodape (footer), home (conteudo principal).
- Para criar os componentes usaremos os seguintes comandos: 

- ng g c topo --skip-tests
- ng g c home --skip-tests
- ng g c rodape --skip-tests

- O nome do seletor pode ser consultado dentro do arquivo ts do proprio componente
ao qual queremos referenciar.
- O nome do seletor é composto pelo nome do seletor principal + nome do componente.
- O nome do seletor principal fica no arquivo angular.json em prefix.

- Comando para rodar o JSON Server:
    - json-server --watch db.json

- A porta default do JSON Server é a 3000.

Criando e alterando o favicon

- O favicon principal da aplicação fica no diretório src/favicon.ico
- Há uma referência para o favicon no arquivo angular.json.

O que são Serviços (Services)?

- Serviços são classes comuns com objetivos bem definidos que visam atender a alguma 
necessidade específica da aplicação.

- A funcão do componente é fazer o databinding com seu respectivo template.
- Podemos criar um serviço para controlar os logs de acesso para podermos saber
quais rotas estão sendo acessadas.
- Podemos usar um serviço para fazer o retorno de uma API de terceiro.
- Quando necessário os serviços podem ser injetados nos componentes que por sua 
vez farão as mudanças visuais em seus templates.
- Um serviço pode ser injetado em três escopos diferentes, em escopo de módulo, por 
exemplo no AppModule é aonde declaramos todos os componentes da aplicação.
- Podemos trabalhar com a mesma instância de um serviço em toda a aplicação de modo 
singleton.
- Um serviço pode ser injetado diretamente no componente e ficar disponível 
apenas no componente em que foi injetado, ou também pode ser declarado no módulo 
principal e ficar disponível em toda a aplicação.
- Um serviço pode ser injetado em outro serviço através da função decoradora @Injectable.

Criando um serviço para exibir ofertas

Injetando o serviço de ofertas no componente Home parte 1

- Instanciar uma classe de serviço dentro do arquivo ts do componente que iremos utilizar
é uma maneira errada de usar um service.
- Primeiro temos que configurar o serviço como sendo um provider.
- Dentro do decorator @Component do arquivo ts do componente atual referenciamos em 
providers o nome da classe que contém o serviço que queremos injetar.
- Segundo temos que criar uma variavel dentro do construtor da classe do componente,
essa variavel será privada e do tipo da classe que contém o service.

- Se declararmos um provider dentro de @NgModule em app.module.ts ele estará disponível
para todos os componentes da aplicação.

Exibindo ofertas com base no serviço OfertasService parte 1

- A idéia é criar uma classe que representa uma oferta e trabalharmos com arrays de ofertas
dentro de nossa aplicação.
- 